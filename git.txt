Команды для git
git init – создать репозиторий

git config --global user.name "name"- написать ник
git config --global user.email - написать мыло
git config --global --list  -  лист всего
git config --global alias.[name] (сделать бинд в котором будет одна команда) '!echo "Hi"; echo "Hello"(сделать бинд из нескольких команд) ' – сделать бинд команд
git config --global
git config --global core.editor notepad -  включить блокнот
git commit – сделать коммит
git commit -c ORIG_HAND (Orig_hand - последний коммит который мы сделали) - позволяет перейти на прошлый коммит который мы сделали
git commit --ammend  - позволяет перейти на коммит ниже
git show () – в скобки вписать id коммита (id появиться после закрытия commit)
git show --pretty=fuller – показать все commit
git config --global unset alias.(название бинда)

git add (название файла) – добавить файл в git
git commit. – добавить файл в index
git status – статус файла
git rm” “ – удалить файл

git add -p (название файла) – добавить файл (куда????)
git commit –all - сохранить все файлы
git commit -a - тоже самое как и all только короче
git config –global alias.commitall “!git add.;git commit”
git config –global alias.commitall “!git add -A;git commit”
git branch – посмотреть все существующие ветки
git branch (название ветки) – создать новую ветку
git checkout (название ветки) – перейти на новую ветку
git stash - сохранение файла без коммита
git stash pop - вставка файла без коммита
git rest - позволяет убрать файл из индекса
git diff - позволяет сравнить коммиты (Пример: gid diff master test (Master и Test - название веток))
git log - показать все коммиты
git log --oneline - показать все коммиты данной ветки
git log (название ветки) --oneline - показать коммиты запрашиваемой ветки
git show :/ (вписать текст по которому мы хотим найти коммит) - позволяет найти коммит по тексту
git show HEAD~(цифра коммита):(название файла с расширением .txt) - показать текст коммита
git merge (названеие ветки) - объединить две ветки
git merge --no-commit (НАЗВАНИЕ ВЕТКИ)  - позволяет сделать слияние веток без коммита
git merge --no-ff (НАЗВАНИЕ ВЕТКИ) - позволяет сделать слияние веток с новым комиитом
git merge --squash (НАЗВАНИЕ ВЕТКИ) - позволяет скопировать последний коммит с ветки на другую ветку
git merge --abort - позволяет сделать отмену слияния ветки
git cherry-pick (НАЗВАНИЕ КОММИТА) - позволяет скопировать коммит
git cherry-pick (НАЗВАНИЕ КОММИТОВ) - позволяет скопировать несколько коммитов
git cherry-pick (НАЗВАНИЕ ВЕТКИ)..(НАЗВАНИЕ ВЕТКИ) - позволяет копировать все коммиты из другой ветки
git cherry-pick --abort - позволяет отменить копирование коммитов
git branch -D (название ветки) - удалить ветку
git reset --hard - убирает изменнеия в рабочей директории и в индексе (на подобии CTRL+Z)
git clean -df - позволяет удалить все не добавленные файлы
git config --global core.editor "название редактора" - позволяет выбрать редактор текста
git rebase master (НАЗВАНИЕ КОММИТА (опционально)) - позволяет переместить коммиты